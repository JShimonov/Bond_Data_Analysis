resultsChanged
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged1 <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged1 <- lm(ed ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50 + dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50 + dadcoll + incomehi*250000 + ownhome + cue80*6 + stwmfg80*8, data = CollegeDistance)
results <- lm(ed ~ dist + female + black + hispanic + bytest + dadcoll + incomehi + ownhome + cue80 + stwmfg80, data = CollegeDistance)
results
resultsChanged <- lm((ed*14.97 ~ dist*10 + female + black + hispanic + bytest*50 + dadcoll + incomehi*25000 + ownhome + cue80*6.0 + stwmfg80*8.00, data = CollegeDistance))
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + hispanic + bytest*50 + dadcoll + incomehi*25000 + ownhome + cue80*6.0 + stwmfg80*8.00, data = CollegeDistance)
resultsOmitted <- lm(ed ~ dist + black + hispanic, data = CollegeDistance)
resultsOmitted
stargazer(results, resultsOmitted, type = "text", titlte = "OLS Estimator Results")
lapply(
c("readr", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
setwd("~/Desktop/ECON392W")
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
setwd("~/Desktop/ECON392W")
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
fed_data$`Series code` <- NULL
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
summary(yield_data)
summary(fed_data)
fed_data <- t(fed_data)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
View(fed_data)
yield_data <- as.data.frame(yield_data)
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
View(fed_data)
View(fed_data)
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
summary(yield_data)
summary(fed_data)
head(fed_data)
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(fed_data), type = "text")
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
# convert datasets to dataframes
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
# clean up the fed_data and yield_data a little
# create a new dataset for fed_data where the 2018 and 2019 summary rows are deleted
short_fed_data <- fed_data[-c(1, 2), ]
# remove rows from yield_data where the row values are empty
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
# find basic data on the datasets
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(short_fed_data), type = "text")
View(short_fed_data)
View(yield_data)
results <- lm(Date ~ 10yr Treasury Yield, data = yield_data)
rm(list = ls())
cat(rep("\n", 50))
library(AER); library(dynlm); library(plm)
data("Journals", package = "AER")
View(Journals)
journals <- Journals[, c("subs", "price")]
journals$citeprice <- Journals$price/Journals$citations
View(journals)
View(Journals)
View(journals)
View(Journals)
summary(journals)
plot(log(subs) ~ log(citeprice), data = journals)
jour_lm <- lm(log(subs) ~ log(citeprice), data = journals)
abline(jour_lm)
summary(jour_lm)
source('~/Desktop/ECON392W/Shimonov_Joseph_Eco392W.R')
results
View(results)
plot(yield_data$`Date` ~ yield_data$`10yr Treasury Yield`, data = yield_data)
plot(yield_data$`10yr Treasury Yield` ~ yield_data$Date, data = yield_data)
abline(results)
results <- lm(yield_data$`10yr Treasury Yield` ~ yield_data$Date, data = yield_data)
abline(results)
plot(log(yield_data$`10yr Treasury Yield`) ~ yield_data$Date, data = yield_data)
plot(log(yield_data$`10yr Treasury Yield`) ~ yield_data$Date, data = yield_data)
results <- lm(log(yield_data$`10yr Treasury Yield`) ~ yield_data$Date, data = yield_data)
abline(results)
plot(yield_data$`10yr Treasury Yield` ~ yield_data$Date, data = yield_data)
results <- lm(yield_data$`10yr Treasury Yield` ~ yield_data$Date, data = yield_data)
abline(results)
View(yield_data)
plot(yield_data$`Barclays Agg HY Spread` ~ yield_data$Date, data = yield_data)
HY_results <-lm(yield_data$`Barclays Agg HY Spread` ~ yield_data$Date, data = yield_data)
abline(HY_results)
plot(log(yield_data$`Barclays Agg HY Spread`) ~ yield_data$Date, data = yield_data)
HY_results <-lm(log(yield_data$`Barclays Agg HY Spread`) ~ yield_data$Date, data = yield_data)
abline(HY_results)
clr
source('~/Desktop/ECON392W/Shimonov_Joseph_Eco392W.R')
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
# convert datasets to dataframes
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
# clean up the fed_data and yield_data a little
# create a new dataset for fed_data where the 2018 and 2019 summary rows are deleted
short_fed_data <- fed_data[-c(1, 2), ]
# remove rows from yield_data where the row values are empty
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
#summary(yield_data)
#head(fed_data)
# find basic data on the datasets
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(short_fed_data), type = "text")
plot(yield_data$`10yr Treasury Yield` ~ yield_data$Date, data = yield_data)
results <- lm(yield_data$`10yr Treasury Yield` ~ yield_data$Date, data = yield_data)
abline(results)
plot(yield_data$`Barclays Agg HY Spread` ~ yield_data$Date, data = yield_data)
HY_results <-lm(yield_data$`Barclays Agg HY Spread` ~ yield_data$Date, data = yield_data)
abline(HY_results)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
# convert datasets to dataframes
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
# clean up the fed_data and yield_data a little
# create a new dataset for fed_data where the 2018 and 2019 summary rows are deleted
short_fed_data <- fed_data[-c(1, 2), ]
# remove rows from yield_data where the row values are empty
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
#summary(yield_data)
#head(fed_data)
# find basic data on the datasets
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(short_fed_data), type = "text")
plot(yield_data$`10yr Treasury Yield` ~ yield_data$Date, data = yield_data)
results <- lm(yield_data$`10yr Treasury Yield` ~ yield_data$Date, data = yield_data)
abline(results)
plot(yield_data$`Barclays Agg HY Spread` ~ yield_data$Date, data = yield_data)
HY_results <-lm(yield_data$`Barclays Agg HY Spread` ~ yield_data$Date, data = yield_data)
abline(HY_results)
source('~/Desktop/ECON392W/Shimonov_Joseph_Eco392W.R')
source('~/Desktop/ECON392W/Shimonov_Joseph_Eco392W.R')
View(fed_data)
View(short_fed_data)
View(yield_data)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
# convert datasets to dataframes
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
# clean up the fed_data and yield_data a little
# create a new dataset for fed_data where the 2018 and 2019 summary rows are deleted
short_fed_data <- fed_data[-c(1, 2), ]
# remove rows from yield_data where the row values are empty
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
#summary(yield_data)
#head(fed_data)
# find basic data on the datasets
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(short_fed_data), type = "text")
plot(yield_data$`10yr Treasury Yield` ~ yield_data$`Barclays Agg HY Spread`, data = yield_data)
results <- lm(yield_data$`10yr Treasury Yield` ~ yield_data$`Barclays Agg HY Spread`, data = yield_data)
abline(results)
plot(yield_data$`Barclays Agg HY Spread` ~ yield_data$`Barclays Agg Investment Grade Corporate Spread`, data = yield_data)
HY_and_IG_results <-lm(yield_data$`Barclays Agg HY Spread` ~ yield_data$`Barclays Agg Investment Grade Corporate Spread`, data = yield_data)
abline(HY_and_IG_results)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
# convert datasets to dataframes
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
# clean up the fed_data and yield_data a little
# create a new dataset for fed_data where the 2018 and 2019 summary rows are deleted
short_fed_data <- fed_data[-c(1, 2), ]
# remove rows from yield_data where the row values are empty
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
#summary(yield_data)
#head(fed_data)
# find basic data on the datasets
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(short_fed_data), type = "text")
plot(yield_data$`10yr Treasury Yield` ~ yield_data$`Barclays Agg HY Spread`, data = yield_data)
results <- lm(yield_data$`10yr Treasury Yield` ~ yield_data$`Barclays Agg HY Spread`, data = yield_data)
abline(results)
plot(log(yield_data$`Barclays Agg HY Spread`) ~ log(yield_data$`Barclays Agg Investment Grade Corporate Spread`), data = yield_data)
HY_and_IG_results <-lm(log(yield_data$`Barclays Agg HY Spread`) ~ log(yield_data$`Barclays Agg Investment Grade Corporate Spread`), data = yield_data)
abline(HY_and_IG_results)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
# convert datasets to dataframes
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
# clean up the fed_data and yield_data a little
# create a new dataset for fed_data where the 2018 and 2019 summary rows are deleted
short_fed_data <- fed_data[-c(1, 2), ]
# remove rows from yield_data where the row values are empty
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
#summary(yield_data)
#head(fed_data)
# find basic data on the datasets
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(short_fed_data), type = "text")
plot(log(yield_data$`10yr Treasury Yield`) ~ log(yield_data$`Barclays Agg HY Spread`), data = yield_data)
results <- lm(log(yield_data$`10yr Treasury Yield`) ~ log(yield_data$`Barclays Agg HY Spread`), data = yield_data)
abline(results)
plot(log(yield_data$`Barclays Agg HY Spread`) ~ log(yield_data$`Barclays Agg Investment Grade Corporate Spread`), data = yield_data)
HY_and_IG_results <-lm(log(yield_data$`Barclays Agg HY Spread`) ~ log(yield_data$`Barclays Agg Investment Grade Corporate Spread`), data = yield_data)
abline(HY_and_IG_results)
source('~/Downloads/Shimonov_Joseph_Eco38207.R')
View(reg1)
View(data)
getwd()
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
setwd("~/Desktop/ECON392W")
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
short_fed_data <- fed_data[-c(1, 2), ]
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
# get summary information of the datasets
summary(yield_data)
summary(short_fed_data)
View(short_fed_data)
x <- colnames(short_fed_data)
x
for (elem in x) {
# if value exists then remove that column from the fed_data
if (grepl("foreign", elem, fixed=TRUE)) {
short_fed_data = subset(short_fed_data, select = -c(elem))
}
}
print(x)
x[0]
for (elem in x) {}
for (elem in x) {print x}
for (elem in x) {print elem}
for (elem in x) {
print(elem)
# if value exists then remove that column from the fed_data
#if (grepl("foreign", elem, fixed=TRUE)) {
#  short_fed_data = subset(short_fed_data, select = -c(elem))
#}
}
for (elem in x) {
# if value exists then remove that column from the fed_data
if (grepl("foreign", elem, fixed=TRUE)) {
print(elem)
#  short_fed_data = subset(short_fed_data, select = -c(elem))
}
}
data = c()
for (elem in x) {
# if value exists then remove that column from the fed_data
if (grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, elem)
#  short_fed_data = subset(short_fed_data, select = -c(elem))
}
}
print(data)
data = c()
for (elem in x) {
# if value exists then remove that column from the fed_data
if (!grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, elem)
#  short_fed_data = subset(short_fed_data, select = -c(elem))
}
}
data
data = c()
data = c()
index = 1
for (elem in x) {
# if value exists then remove that column from the fed_data
if (!grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, index())
#  short_fed_data = subset(short_fed_data, select = -c(elem))
}
index +- 1
}
x <- colnames(short_fed_data)
x <- colnames(short_fed_data)
# get all column names from short_fed_data
x <- colnames(short_fed_data)
data = c()
index = 1
for (elem in x) {
# if value exists then remove that column from the fed_data
if (!grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, index())
#  short_fed_data = subset(short_fed_data, select = -c(elem))
}
index +- 1
}
for (elem in x) {
# if value exists then remove that column from the fed_data
if (!grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, index)
#  short_fed_data = subset(short_fed_data, select = -c(elem))
}
index +- 1
}
data
for (elem in x) {
# if value exists then remove that column from the fed_data
if (!grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, index)
#  short_fed_data = subset(short_fed_data, select = -c(elem))
}
index += 1
}
for (elem in x) {
# if value exists then remove that column from the fed_data
if (!grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, index)
#  short_fed_data = subset(short_fed_data, select = -c(elem))
}
index = index + 1
}
data
unique(data)
data = unique(data)
data
short_fed_data[, data]
short_fed_data <- short_fed_data[, data]
# remove unnecessary variables (data and values)
rm(data, elem, index, x)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
# convert datasets to dataframes
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
# clean up the fed_data and yield_data a little
# create a new dataset for fed_data where the 2018 and 2019 summary rows are deleted
short_fed_data <- fed_data[-c(1, 2), ]
# get all column names from short_fed_data
x <- colnames(short_fed_data)
data = c()
index = 1
# iterate thru x and check if the column name contains foreign inside of them
for (elem in x) {
# if value exists then remove that column from the fed_data
if (!grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, index)
}
index = index + 1
}
data = unique(data)
short_fed_data <- short_fed_data[, data]
# remove unnecessary variables (data and values)
rm(data, elem, index, x)
# remove rows from yield_data where the row values are empty
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
# get summary information of the datasets
summary(yield_data)
summary(short_fed_data)
# find basic data on the datasets
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(short_fed_data), type = "text")
View(short_fed_data)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
yield_data <- read_excel("Bond Data/BondYields.xlsx")
fed_data <- read_excel("Bond Data/FedData.xlsx")
# convert datasets to dataframes
yield_data <- as.data.frame(yield_data)
fed_data <- as.data.frame(fed_data)
# clean up the fed_data and yield_data a little
# create a new dataset for fed_data where the 2018 and 2019 summary rows are deleted
concise_fed_data <- fed_data[-c(1, 2), ]
# get all column names from short_fed_data
x <- colnames(concise_fed_data)
data = c()
index = 1
# iterate thru x and check if the column name contains foreign inside of them
for (elem in x) {
# if value exists then remove that column from the fed_data
if (!grepl("foreign", elem, fixed=TRUE)) {
data <- c(data, index)
}
index = index + 1
}
data = unique(data)
concise_fed_data <- concise_fed_data[, data]
# remove unnecessary variables (data and values)
rm(data, elem, index, x)
# remove rows from yield_data where the row values are empty
yield_data <- yield_data[!(is.na(yield_data$`10yr Treasury Yield`) | is.na(yield_data$`Barclays Agg HY Spread`) | is.na(yield_data$`Barclays Agg Investment Grade Corporate Spread`)), ]
# get summary information of the datasets
summary(yield_data)
summary(concise_fed_data)
# find basic data on the datasets
stargazer(as.data.frame(yield_data), type="text")
stargazer(as.data.frame(concise_fed_data), type = "text")
View(yield_data)
