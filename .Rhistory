library(readxl)
dataset <- read_excel(NULL)
View(dataset)
CollegeDistance <- read_excel("Downloads/CollegeDistance (1).xls")
# Problem Set 6
CollegeDistance <- read_excel("Downloads/CollegeDistance (1).xls")
stargazer(as.data.frame(CollegeDistance), type="text")
library(readxl)
library(stargazer)
stargazer(as.data.frame(CollegeDistance), type="text")
resultsOmitted <- lm(ed ~ dist, data = CollegeDistance)
resultsOmitted
results <- lm(ed ~ dist + female + black + hispanic + bytest + dadcoll + incomehi + ownhome + cue80 + stwmfg80, data = CollegeDistance)
results
stargazer(results, resultsOmitted, type = "text", titlte = "OLS Estimator Results")
resultsChanged <- lm(ed*14.97 ~ dist, data = CollegeDistance)
resultsChanged
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged1 <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged1 <- lm(ed ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50 + dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50 + dadcoll + incomehi*250000 + ownhome + cue80*6 + stwmfg80*8, data = CollegeDistance)
results <- lm(ed ~ dist + female + black + hispanic + bytest + dadcoll + incomehi + ownhome + cue80 + stwmfg80, data = CollegeDistance)
results
resultsChanged <- lm((ed*14.97 ~ dist*10 + female + black + hispanic + bytest*50 + dadcoll + incomehi*25000 + ownhome + cue80*6.0 + stwmfg80*8.00, data = CollegeDistance))
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + hispanic + bytest*50 + dadcoll + incomehi*25000 + ownhome + cue80*6.0 + stwmfg80*8.00, data = CollegeDistance)
resultsOmitted <- lm(ed ~ dist + black + hispanic, data = CollegeDistance)
resultsOmitted
stargazer(results, resultsOmitted, type = "text", titlte = "OLS Estimator Results")
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rugarch"),
require,
character.only = TRUE)
install.packages(c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rmgarch", "rugarch"))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rugarch"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
returns_data <- read_excel("Bond Data/bloomberg_bond_data.xlsx")
# convert datasets to dataframes
returns_data <- as.data.frame(returns_data)
# remove rows from yield_data where the row values are empty
returns_data <- returns_data[!(is.na(returns_data$`Bloomberg Barclays US Treasury Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)), ]
returns_data <- cbind(returns_data[0], returns_data$`Date`, returns_data$`Bloomberg Barclays US Treasury Index Returns`, returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`, returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)
colnames(returns_data) <- c("Date",
"Bloomberg Barclays US Treasury Index Returns",
"Bloomberg Barclays US Corporate High Yield Bond Index Returns",
"Bloomberg Barclays US Corporate Bond Index Returns")
# get summary information of the datasets
summary(returns_data)
d_mat = as.Date(returns_data$Date, format = "%y/%m/%d")
r_mat = returns_data$`Bloomberg Barclays US Treasury Index Returns`
r_xts <- xts(r_mat, order.by=d_mat)
View(r_xts)
install.packages("quantmod")
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rugarch"),
require,
character.only = TRUE)
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rugarch","rmgarch", "quantmod"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
returns_data <- read_excel("Bond Data/bloomberg_bond_data.xlsx")
# convert datasets to dataframes
returns_data <- as.data.frame(returns_data)
# remove rows from yield_data where the row values are empty
returns_data <- returns_data[!(is.na(returns_data$`Bloomberg Barclays US Treasury Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)), ]
returns_data <- cbind(returns_data[0], returns_data$`Date`, returns_data$`Bloomberg Barclays US Treasury Index Returns`, returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`, returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)
colnames(returns_data) <- c("Date",
"Bloomberg Barclays US Treasury Index Returns",
"Bloomberg Barclays US Corporate High Yield Bond Index Returns",
"Bloomberg Barclays US Corporate Bond Index Returns")
# get summary information of the datasets
summary(returns_data)
d_mat = as.Date(returns_data$Date, format = "%y/%m/%d")
r_mat = returns_data$`Bloomberg Barclays US Treasury Index Returns`
r_xts <- xts(r_mat, order.by=d_mat)
ga_spe <- ugarchspec(mean.model = list(armaOrder = c(1,1)), variance.model = list(garchOrder = c(1,1), model = "sGARCH"), distribution.model = "norm")
dcc_spe <- dccspec(uspec = multispec(replicate(ncol(r_xts), ga_spe)), dccOrder = c(1,1), distribution = "mvnorm")
dcc_spe <- dccspec(uspec = multispec( replicate(ncol(r_xts), ga_spe) ), dccOrder = c(1,1), distribution = "mvnorm")
ga_fit <- ugarchfit(ga_spe, data = r_xts, log = TRUE)
ga_fit
dcc_spe <- dccspec(uspec = multispec( replicate(ncol(r_xts), ga_spe) ), dccOrder = c(1,1), distribution = "mvnorm")
r_mat = c(returns_data$`Bloomberg Barclays US Treasury Index Returns`,
returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`,
returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)
r_xts <- xts(r_mat, order.by=d_mat)
ga_spe <- ugarchspec(mean.model = list(armaOrder = c(1,1)), variance.model = list(garchOrder = c(1,1), model = "sGARCH"), distribution.model = "norm")
ga_fit <- ugarchfit(ga_spe, data = r_xts, log = TRUE)
ga_fit
dcc_spe <- dccspec(uspec = multispec( replicate(ncol(r_xts), ga_spe) ), dccOrder = c(1,1), distribution = "mvnorm")
dcc_spe <- dccspec(uspec = multispec( replicate(ncol(r_xts), ga_spe) ), dccOrder = c(1,1), distribution = "mvnorm")
