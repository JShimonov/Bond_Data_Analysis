library(readxl)
dataset <- read_excel(NULL)
View(dataset)
CollegeDistance <- read_excel("Downloads/CollegeDistance (1).xls")
# Problem Set 6
CollegeDistance <- read_excel("Downloads/CollegeDistance (1).xls")
stargazer(as.data.frame(CollegeDistance), type="text")
library(readxl)
library(stargazer)
stargazer(as.data.frame(CollegeDistance), type="text")
resultsOmitted <- lm(ed ~ dist, data = CollegeDistance)
resultsOmitted
results <- lm(ed ~ dist + female + black + hispanic + bytest + dadcoll + incomehi + ownhome + cue80 + stwmfg80, data = CollegeDistance)
results
stargazer(results, resultsOmitted, type = "text", titlte = "OLS Estimator Results")
resultsChanged <- lm(ed*14.97 ~ dist, data = CollegeDistance)
resultsChanged
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged1 <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged1 <- lm(ed ~ dist*10 + female + black + bytest*50, dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50 + dadcoll + incomehi*250000 + ownhome + cue80*6.0 + stwmfg*8.00, data = CollegeDistance)
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + bytest*50 + dadcoll + incomehi*250000 + ownhome + cue80*6 + stwmfg80*8, data = CollegeDistance)
results <- lm(ed ~ dist + female + black + hispanic + bytest + dadcoll + incomehi + ownhome + cue80 + stwmfg80, data = CollegeDistance)
results
resultsChanged <- lm((ed*14.97 ~ dist*10 + female + black + hispanic + bytest*50 + dadcoll + incomehi*25000 + ownhome + cue80*6.0 + stwmfg80*8.00, data = CollegeDistance))
resultsChanged <- lm(ed*14.97 ~ dist*10 + female + black + hispanic + bytest*50 + dadcoll + incomehi*25000 + ownhome + cue80*6.0 + stwmfg80*8.00, data = CollegeDistance)
resultsOmitted <- lm(ed ~ dist + black + hispanic, data = CollegeDistance)
resultsOmitted
stargazer(results, resultsOmitted, type = "text", titlte = "OLS Estimator Results")
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
returns_data <- read_excel("Bond Data/bloomberg_bond_data.xlsx")
# convert datasets to dataframes
returns_data <- as.data.frame(returns_data)
# remove rows from yield_data where the row values are empty
returns_data <- returns_data[!(is.na(returns_data$`Bloomberg Barclays US Treasury Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)), ]
returns_data <- cbind(returns_data[0], returns_data$`Date`, returns_data$`Bloomberg Barclays US Treasury Index Returns`, returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`, returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)
colnames(returns_data) <- c("Date",
"Bloomberg Barclays US Treasury Index Returns",
"Bloomberg Barclays US Corporate High Yield Bond Index Returns",
"Bloomberg Barclays US Corporate Bond Index Returns")
View(returns_data)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
returns_data <- read_excel("Bond Data/bloomberg_bond_data.xlsx")
# convert datasets to dataframes
returns_data <- as.data.frame(returns_data)
# remove rows from yield_data where the row values are empty
returns_data <- returns_data[!(is.na(returns_data$`Bloomberg Barclays US Treasury Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)), ]
returns_data <- cbind(returns_data[0], returns_data$`Date`, returns_data$`Bloomberg Barclays US Treasury Index Returns`, returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`, returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)
colnames(returns_data) <- c("Date",
"Bloomberg Barclays US Treasury Index Returns",
"Bloomberg Barclays US Corporate High Yield Bond Index Returns",
"Bloomberg Barclays US Corporate Bond Index Returns")
# get summary information of the datasets
summary(returns_data)
read_table(returns_data)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts"),
require,
character.only = TRUE)
install.packages("xts")
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
returns_data <- read_excel("Bond Data/bloomberg_bond_data.xlsx")
# convert datasets to dataframes
returns_data <- as.data.frame(returns_data)
# remove rows from yield_data where the row values are empty
returns_data <- returns_data[!(is.na(returns_data$`Bloomberg Barclays US Treasury Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)), ]
returns_data <- cbind(returns_data[0], returns_data$`Date`, returns_data$`Bloomberg Barclays US Treasury Index Returns`, returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`, returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)
colnames(returns_data) <- c("Date",
"Bloomberg Barclays US Treasury Index Returns",
"Bloomberg Barclays US Corporate High Yield Bond Index Returns",
"Bloomberg Barclays US Corporate Bond Index Returns")
# get summary information of the datasets
summary(returns_data)
install.packages("rmgarch")
library(rmgarch)
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rmgarch"),
require,
character.only = TRUE)
install.packages("rmgarch")
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rmgarch"),
require,
character.only = TRUE)
install.packages("rmgarch")
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rmgarch"),
require,
character.only = TRUE)
install.packages("rmgarch")
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rmgarch"),
require,
character.only = TRUE)
install.packages("rugarch")
install.packages("rugarch")
library(rugarch)
library(rugarch)
library(rmgarch)
install.packages(
"rmgarch",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com")
)
library(rmgarch)
library(Rmpfr)
install.packages(
"rmpfr",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com")
)
install.packages(
"Rmpfr",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com")
)
library(Rmpfr)
install.packages("Rmpfr")
install.packages("tidyverse", repo = 'https://mac.R-project.org')
library(rmgarch)
install.packages("Rmpfr", repo = 'https://mac.R-project.org')
# clean memory and leave some spae before output
rm(list = ls())
cat(rep("\n", 25))
# import libraries
lapply(
c("readr", "readxl", "dplyr", "stringr", "stargazer", "plm", "AER", "xts", "rugarch"),
require,
character.only = TRUE)
# change the working directory
setwd("~/Desktop/ECON392W")
# import datasets
returns_data <- read_excel("Bond Data/bloomberg_bond_data.xlsx")
# convert datasets to dataframes
returns_data <- as.data.frame(returns_data)
# remove rows from yield_data where the row values are empty
returns_data <- returns_data[!(is.na(returns_data$`Bloomberg Barclays US Treasury Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`) | is.na(returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)), ]
returns_data <- cbind(returns_data[0], returns_data$`Date`, returns_data$`Bloomberg Barclays US Treasury Index Returns`, returns_data$`Bloomberg Barclays US Corporate High Yield Bond Index Returns`, returns_data$`Bloomberg Barclays US Corporate Bond Index Returns`)
colnames(returns_data) <- c("Date",
"Bloomberg Barclays US Treasury Index Returns",
"Bloomberg Barclays US Corporate High Yield Bond Index Returns",
"Bloomberg Barclays US Corporate Bond Index Returns")
# get summary information of the datasets
summary(returns_data)
start_date = (1999-10-01)
start_date = as.Date(1999-10-01)
rm("start_date")
r_mat = as.Date(returns_data$Date, format = "%y/%m/%d")
d_mat = as.Date(returns_data$Date, format = "%y/%m/%d")
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
# clean memory and leave some spae before output
rm(list = ls())
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
install.packages(c("BH", "boot", "broom", "caTools", "class", "cli", "clipr", "cluster", "codetools", "cpp11", "crayon", "data.table", "digest", "fansi", "forcats", "generics", "hms", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "magrittr", "MASS", "Matrix", "MatrixModels", "mgcv", "mime", "nlme", "nnet", "pbkrtest", "pillar", "plm", "quantreg", "R6", "raster", "Rcpp", "RcppArmadillo", "Rdpack", "rio", "rmarkdown", "sp", "SparseM", "spatial", "survival", "tibble", "tidyr", "tinytex", "xfun", "zoo"))
library(rmgarch)
library(Rmpfr)
install.packages("Rmpfr")
